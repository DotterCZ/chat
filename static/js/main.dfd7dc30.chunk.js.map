{"version":3,"sources":["components/ChatWindow.js","App.js","index.js"],"names":["ChatWindow","useState","data","setData","videoUrl","setVideoUrl","showAt","setShowAt","loading","setLoading","handleWatchComplete","state","playedSeconds","console","log","useEffect","interval","setInterval","fetch","then","result","json","clearInterval","className","controls","playing","url","width","height","onProgress","id","filter","showAtTime","map","commentData","index","position","name","hours","minutes","src","alt","comment","action","method","type","placeholder","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"kNAqHeA,EAhHI,WAOf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAGMC,EAAsB,SAAAC,GAExBJ,EAAUI,EAAMC,eAChBC,QAAQC,IAAIR,IA6ChB,OAtCAS,qBAAU,WAEN,IAAMC,EAAWC,aAAY,WAGzBC,MADsB,2DAEpBC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAf,GAAQ,OAAIC,EAAYD,MAC7Be,MAAK,SAAAX,GAAO,OAAIC,GAAW,MAG7BS,MADY,yDAEVC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAjB,GAAI,OAAIC,EAAQD,QAfb,KAoBZ,OAAO,kBAAMoB,cAAcN,MAE9B,CAACd,EAAME,IAmBN,sBAAKmB,UAAU,cAAf,UACI,qBAAKA,UAAU,oBAAf,SAII,qBAAKA,UAAU,iBAAf,SACMf,EAA0B,6DAtBjC,cAAC,IAAD,CACPgB,UAAQ,EACRC,SAAO,EAGPF,UAAU,eACVG,IAAKtB,EAAS,GAAGsB,IACjBC,MAAM,MACNC,OAAO,MAEPC,WAAYnB,QAeR,qBAAKa,UAAU,8BAA8BO,GAAG,eAAhD,SACI,qBAAKP,UAAU,UAAf,SACI,qBAAKA,UAAU,8CAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,kDAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,oBAAIA,UAAU,YAAd,oBAEJ,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,uBAAf,SAGIrB,EAAK6B,QAAO,SAAA7B,GAAI,OAAIA,EAAK8B,YAAc1B,KAAQ2B,KAAI,SAACC,EAAaC,GAC7D,OACI,sBAAiBZ,UAAWW,EAAYE,SAAxC,UACI,sBAAKb,UAAU,4BAAf,cAA4C,sBAAMA,UAAU,8BAAhB,SAA+CW,EAAYG,OAAvG,IAAoH,uBAAMd,UAAU,kCAAhB,UAAmDW,EAAYI,MAA/D,IAAuEJ,EAAYK,WAAvM,OADJ,IACkO,qBAAKhB,UAAU,kBAAkBiB,IAAI,4DAA4DC,IAAI,uBACnU,sBAAKlB,UAAU,mBAAf,cAAoCW,EAAYQ,QAAhD,SAFMP,UAU1B,qBAAKZ,UAAU,aAAf,SACI,sBAAMoB,OAAO,IAAIC,OAAO,OAAxB,SACI,sBAAKrB,UAAU,cAAf,cAA8B,uBAAOsB,KAAK,OAAOR,KAAK,UAAUS,YAAY,mBAAmBvB,UAAU,iBAAzG,IAA2H,uBAAMA,UAAU,kBAAhB,cAAmC,wBAAQsB,KAAK,SAAStB,UAAU,2BAAhC,qBAAnC,OAA3H,0B,uBClFzBwB,EAZH,WACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,OAAK,EAAxB,SACE,cAAC,EAAD,WCTVC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfd7dc30.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import ResponsivePlayer from './ResponsivePlayer';\r\n// import ChatBubble from './ChatBubble';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst ChatWindow = () => {\r\n\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {data:[]};\r\n    // }\r\n\r\n    const [data, setData] = useState([]);\r\n    const [videoUrl, setVideoUrl] = useState([]);\r\n\r\n    const [showAt, setShowAt] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    const handleWatchComplete = state => {\r\n\r\n        setShowAt(state.playedSeconds);        \r\n        console.log(showAt);\r\n    }\r\n\r\n    //  console.log(videoUrl[0].url);\r\n    \r\n    const MINUTE_MS = 3000;\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n\r\n            const fetchVideoUrl = \"https://webinar.dotter.cz/data/videos/index.php?video=1\";\r\n            fetch(fetchVideoUrl)\r\n             .then(result => result.json())\r\n             .then(videoUrl => setVideoUrl(videoUrl))\r\n             .then(loading => setLoading(false))\r\n\r\n            const url = \"https://webinar.dotter.cz/data/JSON/index.php?video=1\";\r\n            fetch(url)\r\n             .then(result => result.json())\r\n             .then(data => setData(data))\r\n\r\n            // console.log('Logs every 3 seconds');\r\n          }, MINUTE_MS);\r\n\r\n          return () => clearInterval(interval);\r\n       \r\n    }, [data, videoUrl])    \r\n\r\n    function renderVideo() {\r\n        return <ReactPlayer\r\n        controls\r\n        playing\r\n        // muted\r\n\r\n        className='react-player'\r\n        url={videoUrl[0].url}\r\n        width='95%'\r\n        height='95%'\r\n\r\n        onProgress={handleWatchComplete}\r\n    />\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"chat-window\">\r\n            <div className='player-calibrator'>\r\n                {/* <ResponsivePlayer\r\n                    url={url}\r\n                /> */}\r\n                <div className='player-wrapper'>\r\n                    {!loading ? renderVideo() : 'Připojování k živému vysílání!'}\r\n                </div>\r\n            </div>\r\n            <div className=\"page-content page-container\" id=\"page-content\">\r\n                <div className=\"padding\">\r\n                    <div className=\"row container d-flex justify-content-center\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"box box-warning direct-chat direct-chat-warning\">\r\n                                <div className=\"box-header with-border\">\r\n                                    <h3 className=\"box-title\">Chat</h3>\r\n                                </div>\r\n                                <div className=\"box-body\">\r\n                                    <div className=\"direct-chat-messages\">\r\n                                        \r\n                                    {\r\n                                        data.filter(data => data.showAtTime <= showAt).map((commentData, index)=>{\r\n                                            return (\r\n                                                <div key={index} className={commentData.position}>\r\n                                                    <div className=\"direct-chat-info clearfix\"> <span className=\"direct-chat-name pull-right\">{commentData.name}</span> <span className=\"direct-chat-timestamp pull-left\">{commentData.hours}:{commentData.minutes}</span> </div> <img className=\"direct-chat-img\" src=\"https://img.icons8.com/office/36/000000/person-female.png\" alt=\"message user image\" />\r\n                                                    <div className=\"direct-chat-text\"> {commentData.comment} </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"box-footer\">\r\n                                    <form action=\"#\" method=\"post\">\r\n                                        <div className=\"input-group\"> <input type=\"text\" name=\"message\" placeholder=\"Type Message ...\" className=\"form-control\" /> <span className=\"input-group-btn\"> <button type=\"button\" className=\"btn btn-warning btn-flat\">Odeslat</button> </span> </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChatWindow;","\r\nimport ChatWindow from './components/ChatWindow';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/:id\" exact>\r\n          <ChatWindow />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}